{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","fetchData","country","a","dynamicUrl","apiUrl","axios","get","fetchDailyData","requiredData","map","dailyData","total","date","reportDate","console","log","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","barChart","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formcontrol","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5bb69fe3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2n3PC\",\"card\":\"Cards_card__3f-zT\",\"infected\":\"Cards_infected__B-XJi\",\"recovered\":\"Cards_recovered__3i55B\",\"deaths\":\"Cards_deaths__2Urn7\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid, StylesProvider} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ( { data: { confirmed, recovered, deaths, lastUpdate} } ) => {\r\n\r\n    if(!confirmed){\r\n        return \"Loading ...\"\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\" > \r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2}\r\n                                separator=\",\" \r\n                                />    \r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of confirmed cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={2}\r\n                                separator=\",\" \r\n                                />    \r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={2}\r\n                                separator=\",\" \r\n                                />    \r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deathes cases by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                    \r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Cards;","import axios from 'axios';\r\nimport { apiUrl } from './../config.json';\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n    let dynamicUrl = apiUrl;\r\n\r\n    if(country){\r\n        dynamicUrl = `${apiUrl}/countries/${country}`;\r\n    }\r\n\r\n    try{\r\n        const { data: {confirmed, recovered, deaths, lastUpdate } } = await axios.get(dynamicUrl);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n\r\n    } catch (error) {\r\n\r\n    }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${apiUrl}/daily`);\r\n        \r\n        const requiredData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n            \r\n        }));\r\n\r\n        return requiredData;\r\n        \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries }} = await axios.get(`${apiUrl}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data: { confirmed, recovered, deaths }, country}) => {\r\n\r\n    const [ dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchApi();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n\r\n        dailyData.length\r\n        ? (\r\n            <Line \r\n            data={{\r\n                labels: dailyData.map(( { date }) => date),\r\n                datasets: [ {\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: 'Confirmed',\r\n                    borderColor: '#0099e5',\r\n                    fill: true,\r\n                }, {\r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: '#ff4c4c',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar\r\n            data={{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: ['#0099e5', '#34bf49', '#ff4c4c'],\r\n                    data: [ confirmed.value, recovered.value, deaths.value],\r\n                }]\r\n            }}\r\n            options={{\r\n                legend: {display: false},\r\n                title: {display: true, text: `Current state in ${country}`},\r\n            }} />\r\n        ): null\r\n    );\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country? barChart: lineChart}\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from './../../api/index';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker = ( {handleCountryChange} ) => {\r\n\r\n    const [ fetchedCountries, setFetchedCountries ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setFetchedCountries(await fetchCountries() );\r\n        }\r\n\r\n        fetchApi();\r\n    }, [setFetchedCountries]);\r\n    \r\n    return(\r\n        <FormControl className={styles.formcontrol}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n        )\r\n} \r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\n\r\nimport { fetchData } from './api/index';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: ''\r\n    }\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({ data: fetchedData });\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        console.log(fetchedData);    \r\n        this.setState( { data: fetchedData, country: country } );\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { data, country } = this.state;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <h1>COVID-19 Data Visualization</h1>\r\n                <Cards\r\n                    data={data} \r\n                    />\r\n                <CountryPicker\r\n                    handleCountryChange={this.handleCountryChange} \r\n                    />\r\n                <Chart data={data} country={country} />\r\n                <p>By: <a href=\"https://github.com/AliHassandev\" target=\"_blank\">Ali Hassan</a></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2PHdM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2IOTj\"};"],"sourceRoot":""}